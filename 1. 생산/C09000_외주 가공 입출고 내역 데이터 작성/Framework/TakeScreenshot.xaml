<Activity mc:Ignorable="sap sap2010" x:Class="TakeScreenshot" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/ftp" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Folder" Type="InArgument(x:String)" />
    <x:Property Name="io_FilePath" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>717.6,4405.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TakeScreenshot_2</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="27">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="23">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Usage: Set in_Folder to the folder Name where you want to save the screenshot. Alternatively, supply the full path including filename in io_FilePath. Description: This workflow captures a screenshot and logs it's name and location. It then saves it. If io_FilePath is empty, it will try to save the picture in in_Folder.  It uses .png extension." DisplayName="Screenshot sequence" sap:VirtualizedContainerService.HintSize="697.6,4345.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:Image" Name="screenshot" />
      <Variable x:TypeArguments="si:FileInfo" Name="screenshotFileInfo" />
      <Variable x:TypeArguments="njl:JObject" Name="joProject" />
      <Variable x:TypeArguments="x:String" Name="strRes" />
      <Variable x:TypeArguments="njl:JObject" Name="JOAuth" />
      <Variable x:TypeArguments="njl:JObject" Name="JOTenants" />
      <Variable x:TypeArguments="njl:JArray" Name="JATenants" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dicRobots" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take screenshot" sap:VirtualizedContainerService.HintSize="656,68.8" sap2010:WorkflowViewState.IdRef="TakeScreenshot_1" Screenshot="[screenshot]">
      <ui:TakeScreenshot.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" WaitForReady="INTERACTIVE">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
        </ui:Target>
      </ui:TakeScreenshot.Target>
    </ui:TakeScreenshot>
    <If Condition="[String.IsNullOrEmpty(io_filePath)]" DisplayName="If no file path" sap:VirtualizedContainerService.HintSize="656,209.6" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Assign DisplayName="Make file path" sap:VirtualizedContainerService.HintSize="263.2,60" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[io_FilePath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Path.Combine(in_Folder, "ExceptionScreenshot_"+Now.ToString("yyMMdd.HHmmss")+".png")]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <Assign DisplayName="Create fileInfo with Path" sap:VirtualizedContainerService.HintSize="656,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="si:FileInfo">[screenshotFileInfo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="si:FileInfo">[new fileinfo(io_FilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[Directory.Exists(screenshotFileInfo.DirectoryName)]" DisplayName="If directory does not exist, create it" sap:VirtualizedContainerService.HintSize="656,235.2" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Else>
        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap:VirtualizedContainerService.HintSize="333.6,85.6" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[screenshotFileInfo.DirectoryName]" />
      </If.Else>
    </If>
    <ui:SaveImage DisplayName="Save screenshot" FileName="[io_FilePath]" sap:VirtualizedContainerService.HintSize="656,92.8" sap2010:WorkflowViewState.IdRef="SaveImage_1" Image="[screenshot]" />
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="656,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Screenshot saved at: &quot;+io_FilePath]" />
    <TryCatch DisplayName="Try Catch - 오류 스크린샷 FTP 업로드" sap:VirtualizedContainerService.HintSize="656,3193.6" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Sequence - 오류 스크린샷 FTP 업로드" sap:VirtualizedContainerService.HintSize="619.2,2962.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strURL" />
            <Variable x:TypeArguments="x:String" Name="strIP" />
            <Variable x:TypeArguments="x:String" Name="strPortalID" />
            <Variable x:TypeArguments="ss:SecureString" Name="strPortalPWD" />
            <Variable x:TypeArguments="x:String" Name="strProcessCode" />
            <Variable x:TypeArguments="str:Regex" Name="reg" />
            <Variable x:TypeArguments="x:String" Name="strOrchID" />
            <Variable x:TypeArguments="ss:SecureString" Name="strOrchPWD" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetRobotAsset AssetName="공용_Orchestrator_URL" DisplayName="Get Asset - 오케스트레이터URL" sap:VirtualizedContainerService.HintSize="577.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1" TimeoutMS="[1000 * 10]">
            <ui:GetRobotAsset.Value>
              <OutArgument x:TypeArguments="x:String">[strURL]</OutArgument>
            </ui:GetRobotAsset.Value>
          </ui:GetRobotAsset>
          <ui:GetRobotAsset AssetName="공용_Portal_IP" DisplayName="Get Asset - 포탈IP" sap:VirtualizedContainerService.HintSize="577.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2" TimeoutMS="[1000 * 10]">
            <ui:GetRobotAsset.Value>
              <OutArgument x:TypeArguments="x:String">[strIP]</OutArgument>
            </ui:GetRobotAsset.Value>
          </ui:GetRobotAsset>
          <ui:GetRobotCredential AssetName="공용_Credential_Portal" DisplayName="Get Credential - 포탈 계정" sap:VirtualizedContainerService.HintSize="577.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[strPortalPWD]" TimeoutMS="[1000 * 10]" Username="[strPortalID]" />
          <ui:GetRobotCredential AssetName="공용_Credential_Orchestrator" DisplayName="Get Credential - 오케 계정" sap:VirtualizedContainerService.HintSize="577.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[strOrchPWD]" TimeoutMS="[1000 * 10]" Username="[strOrchID]" />
          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[joProject]" JsonString="[System.IO.File.ReadAllText(Directory.GetCurrentDirectory() + “\project.json”)]" />
          <Assign DisplayName="Assign - strProcessCode" sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strProcessCode]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[joProject("name").ToString.Split({"_"c, "."c})(0)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(strProcessCode,&quot;^[a-zA-Z][0-9][0-9][0-9][0-9][0-9]$&quot;)]" DisplayName="If - 프로세스코드 확인" sap:VirtualizedContainerService.HintSize="577.6,209.6" sap2010:WorkflowViewState.IdRef="If_6">
            <If.Else>
              <Throw Exception="[new Exception(&quot;프로세스 코드 형식이 맞지 않습니다.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </If.Else>
          </If>
          <Assign sap2010:Annotation.AnnotationText="Key: RobotName, Value: MachineName" DisplayName="Assign - dicRobots" sap:VirtualizedContainerService.HintSize="577.6,91.2" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dicRobots]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Host 인증정보 획득" EndPoint="[strURL + &quot;/api/Account/Authenticate&quot;]" sap:VirtualizedContainerService.HintSize="577.6,22.4" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[strRes]" TimeoutMS="6000">
            <ui:HttpClient.Attachments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <InArgument x:TypeArguments="x:String" x:Key="tenancyName">host</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="usernameOrEmailAddress">[strOrchID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="password">[new Net.NetworkCredential("" ,strOrchPWD).Password]</InArgument>
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
          </ui:HttpClient>
          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[JOAuth]" JsonString="[strRes]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:DeserializeJson>
          <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Tenants" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request" EndPoint="[strURL + &quot;/odata/Tenants&quot;]" sap:VirtualizedContainerService.HintSize="577.6,53.6" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" Result="[strRes]" TimeoutMS="6000">
            <ui:HttpClient.Attachments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + JOAuth.GetValue("result").ToString]</InArgument>
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:HttpClient>
          <ui:DeserializeJson x:TypeArguments="njl:JObject" sap2010:Annotation.AnnotationText="@odata.context: string&#xA;@odata.count: number&#xA;value: JobsArray " DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="577.6,120" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[JOTenants]" JsonString="[strRes]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:DeserializeJson>
          <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_1" JsonArray="[JATenants]" JsonString="[JOTenants.GetValue(&quot;value&quot;).ToString]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:DeserializeJsonArray>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Get Robot" sap:VirtualizedContainerService.HintSize="577.6,999.2" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[From obj In JATenants Where obj.Item(&quot;IsActive&quot;).ToString.ToUpper.Equals(&quot;TRUE&quot;) let val = obj.Item(&quot;Name&quot;).ToString Select val]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="tenant" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,864.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="njl:JObject" Name="JORobots" />
                    <Variable x:TypeArguments="njl:JArray" Name="JARobots" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Tenant 인증정보 획득" EndPoint="[strURL + &quot;/api/Account/Authenticate&quot;]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="POST" Result="[strRes]" TimeoutMS="6000">
                    <ui:HttpClient.Attachments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Attachments>
                    <ui:HttpClient.Cookies>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Cookies>
                    <ui:HttpClient.Headers>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Headers>
                    <ui:HttpClient.Parameters>
                      <InArgument x:TypeArguments="x:String" x:Key="tenancyName">[tenant]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="usernameOrEmailAddress">[strOrchID]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="password">[new Net.NetworkCredential("", strOrchPWD).Password]</InArgument>
                    </ui:HttpClient.Parameters>
                    <ui:HttpClient.UrlSegments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.UrlSegments>
                  </ui:HttpClient>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[JOAuth]" JsonString="[strRes]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:DeserializeJson>
                  <If Condition="[JOAuth.GetValue(&quot;result&quot;) is Nothing]" DisplayName="If - result가 Null 일시 인증 실패" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="If_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_1" />
                    </If.Then>
                  </If>
                  <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Robot" EndPoint="[strURL + &quot;/odata/Robots&quot;]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="HttpClient_4" Method="GET" Result="[strRes]" TimeoutMS="6000">
                    <ui:HttpClient.Attachments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Attachments>
                    <ui:HttpClient.Cookies>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Cookies>
                    <ui:HttpClient.Headers>
                      <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + JOAuth.GetValue("result").ToString]</InArgument>
                    </ui:HttpClient.Headers>
                    <ui:HttpClient.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Parameters>
                    <ui:HttpClient.UrlSegments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.UrlSegments>
                  </ui:HttpClient>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" sap2010:Annotation.AnnotationText="@odata.context: string&#xA;@odata.count: number&#xA;value: RobotArray " DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="333.6,120" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[JORobots]" JsonString="[strRes]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:DeserializeJson>
                  <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_2" JsonArray="[JARobots]" JsonString="[JORobots.GetValue(&quot;value&quot;).ToString]" />
                  <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="333.6,194.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[JARobots]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="njl:JToken">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="njl:JToken" Name="robot" />
                        </ActivityAction.Argument>
                        <Assign sap:VirtualizedContainerService.HintSize="263.2,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[dicRobots(robot.Item("Id").ToString.ToUpper)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[robot.Item("MachineName").ToString.ToUpper]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <If Condition="[dicRobots.Any(Function(r) r.Value.ToString.Equals(Environment.MachineName.ToUpper))]" sap:VirtualizedContainerService.HintSize="577.6,351.2" sap2010:WorkflowViewState.IdRef="If_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <p:WithFtpSession ClientCertificatePassword="{x:Null}" ClientCertificatePath="{x:Null}" ContinueOnError="False" DisplayName="With ftp session" sap:VirtualizedContainerService.HintSize="433.6,201.6" Host="[strIP]" sap2010:WorkflowViewState.IdRef="WithFtpSession_1" Password="[new Net.NetworkCredential(&quot;&quot;, strPortalPWD).Password]" Port="21" Username="[strPortalID]">
                <p:WithFtpSession.Body>
                  <ActivityAction x:TypeArguments="p:IFtpSession">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="p:IFtpSession" Name="FtpSession" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:UploadFiles ContinueOnError="False" Create="True" DisplayName="Upload files" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="UploadFiles_1" LocalPath="[io_FilePath]" Overwrite="True" Recursive="False" RemotePath="[&quot;1_RPA\&quot; + strProcessCode + &quot;\&quot; + dicRobots.Where(Function(r) r.Value.ToString.Equals(Environment.MachineName.ToUpper)).First().Key + &quot;\&quot; + in_Folder]" />
                    </Sequence>
                  </ActivityAction>
                </p:WithFtpSession.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:WithFtpSession>
            </If.Then>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="577.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Screenshot uploaded&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="622.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;Screenshot upload failed at: &quot; + exception.Message]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>