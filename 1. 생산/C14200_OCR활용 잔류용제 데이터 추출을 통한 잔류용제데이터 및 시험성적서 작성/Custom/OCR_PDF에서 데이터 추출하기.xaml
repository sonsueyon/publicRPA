<Activity mc:Ignorable="sap sap2010" x:Class="draw_rect" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:du="clr-namespace:DongwonCommonLibrary.Util;assembly=DongwonCommonLibrary" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strFileName" Type="InOutArgument(x:String)" />
    <x:Property Name="in_str_마스터경로" Type="InArgument(x:String)" />
    <x:Property Name="결과파일경로" Type="InArgument(x:String)" />
    <x:Property Name="image파일경로" Type="InArgument(x:String)" />
    <x:Property Name="pdf파일경로" Type="InArgument(x:String)" />
    <x:Property Name="sheetname" Type="OutArgument(x:String)" />
    <x:Property Name="out_로트넘버" Type="OutArgument(x:String)" />
    <x:Property Name="out_일자" Type="OutArgument(x:String)" />
    <x:Property Name="out_total값" Type="OutArgument(x:Double)" />
    <x:Property Name="out_성적서_생산일자" Type="OutArgument(s:DateTime)" />
    <x:Property Name="out_성적서_인쇄일자" Type="OutArgument(s:DateTime)" />
    <x:Property Name="apikey" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>893,8316</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Drawing.Internal</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPathOCRType</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="22">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPathOCRType</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="873,8216" sap2010:WorkflowViewState.IdRef="Sequence_12">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="arrText" />
      <Variable x:TypeArguments="sd1:DataTable" Name="dt" />
      <Variable x:TypeArguments="x:String" Name="str_로트넘버" />
      <Variable x:TypeArguments="x:Int32" Name="int1" />
      <Variable x:TypeArguments="sd1:DataTable" Name="dt2" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="831,8124" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:Image" Name="imgTemp" />
        <Variable x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))" Name="res" />
        <Variable x:TypeArguments="sd:Image" Name="img" />
        <Variable x:TypeArguments="x:Int32" Name="intXArea" />
        <Variable x:TypeArguments="x:Int32" Name="intY" />
        <Variable x:TypeArguments="x:Int32" Name="intWidthArea" />
        <Variable x:TypeArguments="x:Int32" Name="intHeight" />
        <Variable x:TypeArguments="x:Int32" Name="intXAmount" />
        <Variable x:TypeArguments="x:Int32" Name="intWidthAmount" />
        <Variable x:TypeArguments="sd1:DataRow" Name="row" />
        <Variable x:TypeArguments="sd:Rectangle" Name="rectExternal" />
        <Variable x:TypeArguments="x:String" Name="strTest" />
        <Variable x:TypeArguments="sd:Rectangle" Name="rectSampleName" />
        <Variable x:TypeArguments="sd:Rectangle" Name="rectSample" />
        <Variable x:TypeArguments="sd:Rectangle" Name="rectName" />
        <Variable x:TypeArguments="x:String" Name="strSampleName" />
        <Variable x:TypeArguments="s:String[]" Name="arrPrintDate" />
        <Variable x:TypeArguments="ui:GenericValue" Name="strText" />
        <Variable x:TypeArguments="x:String" Name="variable2" />
        <Variable x:TypeArguments="s:String[]" Name="arrLotno" />
        <Variable x:TypeArguments="x:String" Name="str_생산일자" />
        <Variable x:TypeArguments="x:String" Name="str_인쇄일자" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:BuildDataTable DataTable="[dt]" DisplayName="Build Data Table - Area, Amount DT 생성" sap:VirtualizedContainerService.HintSize="789,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Area&quot; type=&quot;xs:anyType&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Amount&quot; type=&quot;xs:anyType&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
      <upap:ExportPDFPageAsImage sap2010:Annotation.AnnotationText="pdf 1페이지를 이미지 파일로 추출" DisplayName="Export PDF Page As Image" FileName="[Path.Combine(  pdf파일경로, in_strFileName &amp; &quot;.pdf&quot;)]" sap:VirtualizedContainerService.HintSize="789,118" sap2010:WorkflowViewState.IdRef="ExportPDFPageAsImage_1" ImageDpi="300" OutputFileName="[Path.Combine( image파일경로, in_strFileName &amp;&quot;.jpg&quot;)]" PageNumber="1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </upap:ExportPDFPageAsImage>
      <ui:LoadImage sap2010:Annotation.AnnotationText="추출한 이미지파일을 load " DisplayName="Load Image" FileName="[Path.Combine(image파일경로, in_strFileName &amp; &quot;.jpg&quot;)]" sap:VirtualizedContainerService.HintSize="789,90" sap2010:WorkflowViewState.IdRef="LoadImage_1" Image="[imgTemp]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LoadImage>
      <Assign sap2010:Annotation.AnnotationText="size 변경" sap:VirtualizedContainerService.HintSize="789,91" sap2010:WorkflowViewState.IdRef="Assign_28">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:Image">[img]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:Bitmap">[new Bitmap(imgTemp, New Size(574, 933))]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:SaveImage DisplayName="Save Image" FileName="[Path.Combine(image파일경로, in_strFileName &amp; &quot;_re.jpg&quot;)]" sap:VirtualizedContainerService.HintSize="789,92" sap2010:WorkflowViewState.IdRef="SaveImage_2" Image="[img]" />
      <Assign sap2010:Annotation.AnnotationText="load한 이미지 객체 형식을 Uipath.Core.Image에서 System.Drawing.Image로 변환" sap:VirtualizedContainerService.HintSize="789,117" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:Image">[img]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:Bitmap">[new Bitmap(imgTemp)]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="789,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Dispose">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="ui:Image">[imgTemp]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="789,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Collect" TargetType="s:GC" />
      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="789,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="WaitForPendingFinalizers" TargetType="s:GC" />
      <ui:GoogleCloudOCR FilterRegion="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ApiKey="[apikey]" ComputeSkewAngle="False" DisplayName="Google Cloud Vision OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="789,22" sap2010:WorkflowViewState.IdRef="GoogleCloudOCR_1" Image="[img]" Language="ko" ResizeToApiLimits="False" Result="[res]" />
      <Sequence DisplayName="Sequence 샘플네임 추출하기" sap:VirtualizedContainerService.HintSize="789,769" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:Rectangle">[rectSample]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:Rectangle">[(From kv in res where kv.Value.Contains("Sample") select kv.Key).First]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:Rectangle">[rectName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:Rectangle">[(From kv in res where kv.Value.Contains("Name") select kv.Key).First]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:Rectangle">[rectSampleName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:Rectangle">[new Rectangle(0, rectSample.Y - 5, img.Width, rectSample.Height + 10)]</InArgument>
          </Assign.Value>
        </Assign>
        <InvokeMethod sap2010:Annotation.AnnotationText="읽은 단어들의 위치를 빨간 박스로 표시" DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="262,176" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="DrawRectangle">
          <InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="sd:Graphics">[Graphics.FromImage(img)]</InArgument>
          </InvokeMethod.TargetObject>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <InArgument x:TypeArguments="sd:Pen">[new Pen(Color.FromName("green"),4)]</InArgument>
          <InArgument x:TypeArguments="sd:Rectangle">[rectSampleName]</InArgument>
        </InvokeMethod>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strSampleName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[String.Join(" ", From kv in res let r = kv.Key let s = kv.Value where rectSampleName.Contains(r) select s)]</InArgument>
          </Assign.Value>
        </Assign>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[strSampleName]" />
      </Sequence>
      <Assign sap:VirtualizedContainerService.HintSize="789,60" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:Rectangle">[rectExternal]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:Rectangle">[(From kv in res where kv.Value.Contains("Extern") select kv.Key).First]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:MultipleAssign DisplayName="Multiple Assign - 파란 박스 위치, 크기 지정" sap:VirtualizedContainerService.HintSize="789,253" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[intY]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[rectExternal.Y + 771]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[intHeight]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[28 * 2]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[intXArea]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[250 * 2]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[intXAmount]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[470 * 2]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[intWidthArea]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[95 * 2]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[intWidthAmount]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[130 * 2]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <InvokeMethod sap2010:Annotation.AnnotationText="읽은 단어들의 위치를 빨간 박스로 표시" DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="789,176" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="DrawRectangles">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="sd:Graphics">[Graphics.FromImage(img)]</InArgument>
        </InvokeMethod.TargetObject>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <InArgument x:TypeArguments="sd:Pen">[new Pen(Color.FromName("red"),2)]</InArgument>
        <InArgument x:TypeArguments="sd:Rectangle[]">[(From kv in res select kv.Key).ToArray]</InArgument>
      </InvokeMethod>
      <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="789,1254" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Enumerable.Range(0, 6)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Int32">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="idx" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="611,1120" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd1:DataRow">[row]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd1:DataRow">[dt.NewRow]</InArgument>
                </Assign.Value>
              </Assign>
              <InvokeMethod sap2010:Annotation.AnnotationText="Area 열에 파란박스 표시" DisplayName="Invoke Method - Area" sap:VirtualizedContainerService.HintSize="569,165" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="DrawRectangle">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sd:Graphics">[Graphics.FromImage(img)]</InArgument>
                </InvokeMethod.TargetObject>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <InArgument x:TypeArguments="sd:Pen">[new Pen(Color.FromName("blue"), 2)]</InArgument>
                <InArgument x:TypeArguments="sd:Rectangle">[new Rectangle(intXArea, intY + (intHeight * idx), intWidthArea, intHeight)]</InArgument>
              </InvokeMethod>
              <If Condition="[(From kv in res where new Rectangle(intXArea, intY + (intHeight * idx), intWidthArea, intHeight).Contains(kv.Key) select kv.Key).Count = 0 OrElse String.Join(&quot;&quot;,From kv in res where new Rectangle(intXArea, intY + (intHeight * idx), intWidthArea, intHeight).Contains(kv.Key) select kv.Value.Trim).Equals(&quot;-&quot;)]" DisplayName="If - 파란 표시한 Area 영역에 포함되는 " sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("Area")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["'-"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("Area")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.Join("",From kv in res where new Rectangle(intXArea, intY + (intHeight * idx), intWidthArea, intHeight).Contains(kv.Key) select kv.Value.Trim)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
              <InvokeMethod sap2010:Annotation.AnnotationText="Amount 열에 파란 박스 표시" DisplayName="Invoke Method - Amount" sap:VirtualizedContainerService.HintSize="569,165" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="DrawRectangle">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sd:Graphics">[Graphics.FromImage(img)]</InArgument>
                </InvokeMethod.TargetObject>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <InArgument x:TypeArguments="sd:Pen">[new Pen(Color.FromName("blue"), 2)]</InArgument>
                <InArgument x:TypeArguments="sd:Rectangle">[new Rectangle(intXAmount, intY + (intHeight * idx), intWidthAmount, intHeight)]</InArgument>
              </InvokeMethod>
              <If Condition="[(From kv in res where new Rectangle(intXAmount, intY + (intHeight * idx), intWidthAmount, intHeight).Contains(kv.Key) select kv.Key).Count = 0 OrElse String.Join(&quot;&quot;, (From kv in res where new Rectangle(intXAmount, intY + (intHeight * idx), intWidthAmount, intHeight).Contains(kv.Key) select kv.Value.Trim)).Equals(&quot;-&quot;)]" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("Amount")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["'-"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("Amount")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[CDbl(String.Join("", (From kv In res Where New Rectangle(intXAmount, intY + (intHeight * idx), intWidthAmount, intHeight).Contains(kv.Key) Select kv.Value.Trim)).Replace("—", "-"))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
              <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[row]" DataTable="[dt]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="569,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <Assign sap:VirtualizedContainerService.HintSize="789,60" sap2010:WorkflowViewState.IdRef="Assign_18">
        <Assign.To>
          <OutArgument x:TypeArguments="sd1:DataRow">[row]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd1:DataRow">[dt.NewRow]</InArgument>
        </Assign.Value>
      </Assign>
      <InvokeMethod sap2010:Annotation.AnnotationText="Amount 열에 파란 박스 표시" DisplayName="Invoke Method - total" sap:VirtualizedContainerService.HintSize="789,165" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="DrawRectangle">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="sd:Graphics">[Graphics.FromImage(img)]</InArgument>
        </InvokeMethod.TargetObject>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <InArgument x:TypeArguments="sd:Pen">[new Pen(Color.FromName("blue"), 2)]</InArgument>
        <InArgument x:TypeArguments="sd:Rectangle">[new Rectangle(intXAmount, intY + (intHeight * 7), intWidthAmount, intHeight)]</InArgument>
      </InvokeMethod>
      <If Condition="[(From kv in res where new Rectangle(intXAmount, intY + (intHeight * 7), intWidthAmount, intHeight).Contains(kv.Key) select kv.Key).Count = 0 OrElse String.Join(&quot;&quot;, (From kv in res where new Rectangle(intXAmount, intY + (intHeight * 7), intWidthAmount, intHeight).Contains(kv.Key) select kv.Value.Trim)).Equals(&quot;-&quot;)]" DisplayName="If total / " sap:VirtualizedContainerService.HintSize="789,208" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[row("Amount")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">["'-"]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[row("Amount")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Double">[CDbl(String.Join("", (From kv In res Where New Rectangle(intXAmount, intY + (intHeight * 7), intWidthAmount, intHeight).Contains(kv.Key) Select kv.Value.Trim)).Replace("—", "-"))]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[row]" DataTable="[dt]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="789,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope 템플릿 엑셀 시트에 값작성해서 이미지로 변환하기 " sap:VirtualizedContainerService.HintSize="789,1341" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[Path.Combine( in_str_마스터경로, &quot;temp.xlsx&quot; )]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="755,1232" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="temp" StartingCell="F3" />
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="713,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,158" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Sequence 띄워쓰기와 상관없이 조건에 맞는 문자열추출" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="arrMatches" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches BuilderPattern="\d{4}-\d{1,}[(]\d{4}-[a-zA-Z]*[)]" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_2" Input="3in1 premium 0715-222(0818-sejong)" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;\\d{4}-\\d{1,}[(]\\d{4}-[a-zA-Z]*[)]&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\d{4}-\d{1,}[(]\d{4}-[a-zA-Z]*[)]" RegexOption="IgnoreCase" Result="[arrMatches]" />
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[arrMatches.First.value]" />
                    </Sequence>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <Sequence sap2010:Annotation.AnnotationText="Sample Name: 3in1 premium 0715-222(0818-sejong)" DisplayName="Samplename쪼개기" sap:VirtualizedContainerService.HintSize="713,194" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Sample , Name: , 3in1 , premium , 0713, 84 , 0826, sejong" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[arrText]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[strSampleName.Split({" ", "(", ")" , "-"}, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="713,61" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[arrText(5)]" />
              <ui:ExcelWriteCell Cell="E1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="temp" Text="[arrText(5) &amp; &quot;-&quot; &amp; arrText(6)]" />
              <ui:ExcelWriteCell Cell="E2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="temp" Text="[arrText(7)]" />
              <If Condition="[arrText(8) = &quot;sejong&quot;]" sap:VirtualizedContainerService.HintSize="713,234" sap2010:WorkflowViewState.IdRef="If_4">
                <If.Then>
                  <ui:ExcelWriteCell Cell="E3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="temp" Text="세종" />
                </If.Then>
                <If.Else>
                  <ui:ExcelWriteCell Cell="E3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="temp" Text="[arrText(8)]" />
                </If.Else>
              </If>
              <ui:ExcelReadCell Cell="C9" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="713,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Temp">
                <ui:ExcelReadCell.Result>
                  <OutArgument x:TypeArguments="x:Double">[out_total값]</OutArgument>
                </ui:ExcelReadCell.Result>
              </ui:ExcelReadCell>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <Assign sap:VirtualizedContainerService.HintSize="789,60" sap2010:WorkflowViewState.IdRef="Assign_23">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[sheetname]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[arrText(7) &amp; "-" &amp; arrText(5)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="789,60" sap2010:WorkflowViewState.IdRef="Assign_34">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_로트넘버]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[arrText(5) &amp; "-" &amp; arrText(6)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="789,60" sap2010:WorkflowViewState.IdRef="Assign_35">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_일자]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[arrText(7).Substring(0, 2) + "월" + arrText(7).Substring(2, 2)  + "일"]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="789,60" sap2010:WorkflowViewState.IdRef="Assign_38">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_인쇄일자]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[arrText(5)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="789,60" sap2010:WorkflowViewState.IdRef="Assign_39">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_생산일자]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[arrText(7)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[Today &gt; DateTime.ParseExact(  today.Year &amp; str_인쇄일자, &quot;yyyyMMdd&quot; , System.Globalization.CultureInfo.CurrentCulture )]" DisplayName="If 성적서의 인쇄일자의 년도 구하기" sap:VirtualizedContainerService.HintSize="789,208" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Then>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[out_성적서_인쇄일자]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime" xml:space="preserve">[DateTime.ParseExact(  today.Year &amp; str_인쇄일자, "yyyyMMdd" , System.Globalization.CultureInfo.CurrentCulture )]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_41">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[out_성적서_인쇄일자]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime" xml:space="preserve">[DateTime.ParseExact(  today.Year -1 &amp; str_인쇄일자, "yyyyMMdd" , System.Globalization.CultureInfo.CurrentCulture )]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <If Condition="[Today &gt; DateTime.ParseExact(  today.Year &amp; str_생산일자, &quot;yyyyMMdd&quot; , System.Globalization.CultureInfo.CurrentCulture )]" DisplayName="If 성적서의 생산일자의 년도 구하기" sap:VirtualizedContainerService.HintSize="789,208" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Then>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[out_성적서_생산일자]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime" xml:space="preserve">[DateTime.ParseExact(  today.Year &amp; str_생산일자, "yyyyMMdd" , System.Globalization.CultureInfo.CurrentCulture )]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_43">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[out_성적서_생산일자]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime" xml:space="preserve">[DateTime.ParseExact(  today.Year -1 &amp; str_생산일자, "yyyyMMdd" , System.Globalization.CultureInfo.CurrentCulture )]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <du:Util_ExcelToImage sap:VirtualizedContainerService.HintSize="789,22" sap2010:WorkflowViewState.IdRef="Util_ExcelToImage_1" in_strExcelPath="[Path.Combine( in_str_마스터경로, &quot;temp.xlsx&quot; )]" in_strImagePath="[Path.Combine(  image파일경로,  sheetname &amp; &quot;.png&quot; )]" in_strRange="a1:c10" in_strSheetName="Temp" />
      <ui:LoadImage sap2010:Annotation.AnnotationText="추출한 이미지파일을 load " DisplayName="Load Image" FileName="[Path.Combine(  image파일경로,  sheetname &amp; &quot;.png&quot; )]" sap:VirtualizedContainerService.HintSize="789,90" sap2010:WorkflowViewState.IdRef="LoadImage_2" Image="[imgTemp]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LoadImage>
      <Assign sap2010:Annotation.AnnotationText="size 변경" sap:VirtualizedContainerService.HintSize="789,91" sap2010:WorkflowViewState.IdRef="Assign_44">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:Image">[img]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:Bitmap">[new Bitmap(imgTemp, New Size(252, 200))]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <InvokeMethod DisplayName="Invoke Method temp 파일과 연결해제" sap:VirtualizedContainerService.HintSize="789,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Dispose">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="ui:Image">[imgTemp]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method GC로 불러오기" sap:VirtualizedContainerService.HintSize="789,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Collect" TargetType="s:GC" />
      <InvokeMethod DisplayName="Invoke Method  걔들이 삭제될때까지 대기" sap:VirtualizedContainerService.HintSize="789,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="WaitForPendingFinalizers" TargetType="s:GC" />
      <ui:SaveImage DisplayName="Save Image" FileName="[Path.Combine(  image파일경로,  sheetname &amp; &quot;_re.png&quot; )]" sap:VirtualizedContainerService.HintSize="789,92" sap2010:WorkflowViewState.IdRef="SaveImage_3" Image="[img]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:SaveImage>
    </Sequence>
  </Sequence>
</Activity>